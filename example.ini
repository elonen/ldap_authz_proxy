[default]
; Which HTTP header to read the %USERNAME% from
username_http_header = X-Ldap-Authz-Username

; Example LDAP server configuration. This is for Active Directory,
; and makes a recursive membership query to given group.
ldap_server_url = ldap://dc1.example.test:389
ldap_conn_timeout = 10.0
ldap_bind_dn = CN=service,CN=Users,DC=example,DC=test
ldap_bind_password = password123
ldap_search_base = DC=example,DC=test
ldap_query = (&(objectCategory=Person)(sAMAccountName=%USERNAME%)(memberOf:1.2.840.113556.1.4.1941:=CN=%MY_CUSTOM_VAR%,CN=Users,DC=example,DC=test))
ldap_attribs = displayName, givenName, sn, mail

; Cache size (these are defaults)
cache_time = 30
cache_size = 512

; These specify how to handle multiple LDAP queries/results
deduplicate_attribs = true
sub_query_join = Main


[users]
; Regular expression to match against the request URI
http_path = /users$
; Ldap query references variable MY_CUSTOM_VAR above. Set it for this query:
query_vars = MY_CUSTOM_VAR=ACL_Users
; Fetch additional attributes from LDAP my performing additional queries
; if this one succeeds. See below for their definitions.
sub_queries = is_beta_tester, is_bug_reporter


[admins]
http_path = /admins$
query_vars = MY_CUSTOM_VAR=ACL_Admins
; Fictional example: instruct backend app to show debug info for admins
set_attribs_on_success = extraGroups=show_debug_info


; Internal sub-queries (not matched agains URI as http_path is not defined)
; These examples set additional attributes ("extraGroups") if the user is a
; member of specified groups.

[is_beta_tester]
query_vars = MY_CUSTOM_VAR=Role_Beta_Testers
set_attribs_on_success = extraGroups=beta_tester

[is_bug_reporter]
query_vars = MY_CUSTOM_VAR=Role_Bug_Reporters
set_attribs_on_success = extraGroups=bug_reporter, extraGroups=show_debug_info
; Circular references are pruned, so this nonsense won't crash - it's just useless:
sub_queries = is_bug_reporter, users
